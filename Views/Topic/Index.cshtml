@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model TopicViewModel
@{
    var topic = Model.Topic;
    var author = await UserManager.FindByIdAsync(topic.UserId);
    var TopicId = topic.TopicId;
    ViewData["Title"] = topic.Text;
    Model.Post.TopicId = topic.TopicId;

    var isLogged = false;
    if (SignInManager.IsSignedIn(User))
    {
        isLogged = topic.UserId == UserManager.GetUserId(User);
    }
    // Wyświetlenie wybranego tematu, wraz z jego postami(_enterTopic) na stronie
    <article id="forum">
        <topic author="@author" text="@topic.Text" logged="@isLogged">
            <template v-slot:delete>
                @{
                    await Html.RenderPartialAsync("_deleteTopic", topic);
                }
            </template>
            <template v-slot:edit>
                @{
                    await Html.RenderPartialAsync("_editTopic", topic);
                }
            </template>
        </topic>
        @{
            await Html.RenderPartialAsync("_enterTopic", topic);
        }
    </article>
    await Html.RenderPartialAsync("~/Views/Post/_addPost.cshtml", Model.Post);
    <environment include="Development">
        <script src="~/js/addPost.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/addPost.min.js" asp-append-version="true"></script>
    </environment>
}
